setwd("C:\Users\songminghu\Documents\GitHub\W271\HW2")
setwd("C:/Users/songminghu/Documents/GitHub/W271/HW2")
require(knitr, quietly = TRUE)
read_chunk('code/W271_HW2_Carin.R')
opts_chunk$set(message = FALSE, warning = FALSE)
opts_knit$set(root.dir = './data')
```{r Libraries-Functions-Constants, echo = FALSE}
```
```{r Load_Data, echo = -c(1:4)}
```
install.packages("pastecs")
install.packages("e1071")
install.packages("lmtest")
install.packages("plm")
load("401k_w271.Rdata")
library(ggplot2)
library(knitr)
library(pastecs)
# Define functions
# A function to calculate Robust Standard Errors
RSEs <- function(model){
require(sandwich, quietly = TRUE)
require(lmtest, quietly = TRUE)
newSE <- vcovHC(model)
coeftest(model, newSE)
}
# THE FOLLOWING FUNCTIONS ARE JUST FOR FORMATTING PURPOSES
# A function to apply format (using formatC
frmt <- function(qty, digits = 3) {
formatC(qty, digits = digits, format = "f", drop0trailing = FALSE,
big.mark = ",")
}
# A function that codes significance level
sig_stars <- function(p) {
stars = symnum(p, na = F, cutpoints = c(0, .001, .01, .05, .1, 1),
symbols=c("**`***`**","**`** `**", "**`*  `**", "**.  **",
"   "))
return(stars)
}
# A function that draws a nice-looking table (following standard format for
# publication) with the summary of the regression model
create_regtable <- function(model, params, causes, effect) {
model_summary <- summary(model)
model_coefs <- model_summary$coefficients
estimate <- unlist(lapply(c(seq(2, 1+length(params)), 1), function(x)
paste0(frmt(model_coefs[x, 1]), sig_stars(model_coefs[x, 4]))))
SE <- unlist(lapply(c(seq(2, 1+length(params)), 1), function(x)
paste0("(", frmt(model_coefs[x, 2]), ")  ")))
N <- paste0(length(model_summary$residuals), "   ")
R2 <- paste0(frmt(model_summary$r.squared), "   ")
Fsttstc <- model_summary$fstatistic
Fstatistic <- paste0(frmt(Fsttstc["value"]), "   ")
pvalue <- paste0(frmt(1 - pf(q = Fsttstc["value"],
df1 = Fsttstc["numdf"],
df2 = Fsttstc["dendf"])), "   ")
table <- matrix(c(t(matrix(c(estimate, SE), ncol = 2)), R2, Fstatistic,
pvalue, N), ncol = 1)
rows <- NULL
for (cause in causes) {
rows <- c(rows, paste("**", cause, "**", sep = ""), "")
}
rownames(table) <- c(rows, "Baseline (Intercept)", " ", "$R^2$", "F", "p",
"N")
colnames(table) <- effect
return(table)
}
# Same function to draw table with regression results, but using robust SEs
create_regtable_RSEs <- function(model, params, causes, effect) {
model_coefs <- RSEs(model)
estimate <- unlist(lapply(c(seq(2, 1+length(params)), 1), function(x)
paste0(frmt(model_coefs[x, 1]), sig_stars(model_coefs[x, 4]))))
SE <- unlist(lapply(c(seq(2, 1+length(params)), 1), function(x)
paste0("(", frmt(model_coefs[x, 2]), ")  ")))
N <- paste0(length(model_summary$residuals), "   ")
R2 <- paste0(frmt(model_summary$r.squared), "   ")
Fsttstc <- model_summary$fstatistic
Fstatistic <- paste0(frmt(Fsttstc["value"]), "   ")
pvalue <- paste0(frmt(1 - pf(q = Fsttstc["value"],
df1 = Fsttstc["numdf"],
df2 = Fsttstc["dendf"])), "   ")
table <- matrix(c(t(matrix(c(estimate, SE), ncol = 2)), R2, Fstatistic,
pvalue, N), ncol = 1)
rows <- NULL
for (cause in causes) {
rows <- c(rows, paste("**", cause, "**", sep = ""), "")
}
rownames(table) <- c(rows, "Baseline (Intercept)", " ", "$R^2$", "F", "p",
"N")
colnames(table) <- effect
return(table)
}
# Functions to count & refer figures & tables
# http://rmflight.github.io/posts/2012/10/papersinRmd.html
incCount <- function(inObj, useName) {
nObj <- length(inObj)
useNum <- max(inObj) + 1
inObj <- c(inObj, useNum)
names(inObj)[nObj + 1] <- useName
inObj
}
pasteLabel <- function(preText, inObj, objName, insLink = TRUE) {
objNum <- inObj[objName]
useText <- paste(preText, objNum, sep = " ")
if (insLink) {
useText <- paste("[", useText, "](#", objName, ")", sep = "")
}
useText
}
# Counters for Figures and Tables
figCount <- c(`_` = 0)
tableCount <- c(`_` = 0)
# Define constants
## @knitr Load_Data
# LOAD DATA --------------------------------------------------------------
# Load the 401K contributions dataset
# Path relative to W271.Rproj, never to be run by the .Rmd (conflict with knitr)
# setwd('HW2/data')
load("401k_w271.Rdata")
setwd('HW2/data')
getwd()
setwd('C:/Users/songminghu/Documents/GitHub/W271/HW2/data')
load("401k_w271.Rdata")
desc
str(data)
summary(data)
stat.desc(data$prate, desc = TRUE, basic = TRUE, norm = TRUE)
stat.desc(data$prate, desc = TRUE, basic = TRUE, norm = TRUE)$coef.va
stat.desc(data$prate, desc = TRUE, basic = TRUE, norm = TRUE)$coef.val
stat.desc(data$prate, desc = TRUE, basic = TRUE, norm = TRUE)$nbr
summary(stat.desc(data$prate, desc = TRUE, basic = TRUE, norm = TRUE))
summary(stat.desc(data$prate, desc = TRUE, basic = TRUE, norm = TRUE))$Min
attributes(stat.desc(data$prate, desc = TRUE, basic = TRUE, norm = TRUE))
stat.desc(data$prate, desc = TRUE, basic = TRUE, norm = TRUE)["nbr.val"]
stat.desc(data$prate, desc = TRUE, basic = TRUE, norm = TRUE)$nbr.val"
stat.desc(data$prate, desc = TRUE, basic = TRUE, norm = TRUE)$nbr.val
""
stat.desc(data$prate, desc = TRUE, basic = TRUE, norm = TRUE)$nbr.val
stat.desc(data$prate, desc = TRUE, basic = TRUE, norm = TRUE)$"nbr.val"
stat.desc(data$prate, desc = TRUE, basic = TRUE, norm = TRUE)[,"nbr.val"]
stat.desc(data$prate, desc = TRUE, basic = TRUE, norm = TRUE)["nbr.val",]
attr(stat.desc(data$prate, desc = TRUE, basic = TRUE, norm = TRUE),"nbr.val")
qqnorm(data$prate)
View(data)
View(data)
words1 = rnorm(100)
qqnorm(words1)
words2 = rt(100, df=3)
qqnorm(words2)
shapiro.test(data$prate)
shapiro.test(words1)
shapiro.test(words2)
library(e1071)
kurtosis(data$prate)
histo(data$prate)
hist(data$prate)
hist(data$prate, lwd=2)
hist(data$prate, breaks=5)
ggplot(data = data, aes(prate)) +
geom_histogram(aes(y = (..count..)/sum(..count..)), colour = 'black',
fill = 'white', binwidth = bin_width) +
labs(x = "Percentage of a company's employees\nparticipating in its 401K plan",
y = "Relative frequency",
title = "Histogram of participation rate (%) in 401K plans")
ggplot(data = data, aes(prate)) +
geom_histogram(aes(y = (..count..)/sum(..count..)), colour = 'black',
fill = 'white', binwidth = 5) +
labs(x = "Percentage of a company's employees\nparticipating in its 401K plan",
y = "Relative frequency",
title = "Histogram of participation rate (%) in 401K plans")
ggplot(data = data, aes(prate)) +
geom_freqpoly(aes(y = (..count..)/sum(..count..)), colour = 'black',
fill = 'white', binwidth = 5) +
labs(x = "Percentage of a company's employees\nparticipating in its 401K plan",
y = "Relative frequency",
title = "Histogram of participation rate (%) in 401K plans")
figCount <- incCount(figCount, "hist-Q1")
ggplot(data = data, aes(prate)) +
geom_density() +
labs(x = "Percentage of a company's employees\nparticipating in its 401K plan",
y = "Density",
title = "Approximate density plot of\nparticipation rate (%) in 401K plans\n(incl. anomalous observations)")
ggplot(data = data, aes(log10(prate)) +
geom_density() +
labs(x = "Percentage of a company's employees\nparticipating in its 401K plan",
y = "Density",
title = "Approximate density plot of\nparticipation rate (%) in 401K plans\n(incl. anomalous observations)")
)
ggplot(data = data2, aes(mrate, prate)) +
geom_point() +
labs(x = "Company match rate (%) to their\nemployees' contribution to 401K plans",
y = "Employees' participation rate (%)\nto 401K plans",
title = "Employees' participation rate to 401K plans\nagainst their company's match rate") +
geom_smooth(method = "lm")
data2 <- data[data$prate <= 100, ]
ggplot(data = data2, aes(mrate, prate)) +
geom_point() +
labs(x = "Company match rate (%) to their\nemployees' contribution to 401K plans",
y = "Employees' participation rate (%)\nto 401K plans",
title = "Employees' participation rate to 401K plans\nagainst their company's match rate") +
geom_smooth(method = "lm")
ggplot(data = data2, aes(mrate, prate)) +
geom_point() +
labs(x = "Company match rate (%) to their\nemployees' contribution to 401K plans",
y = "Employees' participation rate (%)\nto 401K plans",
title = "Employees' participation rate to 401K plans\nagainst their company's match rate") )
ggplot(data = data2, aes(mrate, prate)) +
geom_point() +
labs(x = "Company match rate (%) to their\nemployees' contribution to 401K plans",
y = "Employees' participation rate (%)\nto 401K plans",
title = "Employees' participation rate to 401K plans\nagainst their company's match rate")
frmt(min(data$prate), 1)
min(data$prate), 1
min(data$prate)
help(frmt)
install.packages("ggfortify")
model1 <-  lm(prate~ mrate)
model1 <-  lm(data2$prate~ data2$mrate)
summary(model1)
help(create_regtable)
??create_regtable
help(kable)
table
params <- "mrate" # regressor()
model <- lm(as.formula(paste("prate", paste(params, sep = "",
collapse = " + "), sep = " ~ ")),
data = data2)
summary(model)
# Create the table with the given parameters (using function in 1st section)
table <- create_regtable(model, params, c("Company match rate (%)"),
"Employees' participation rate (%) to 401K plans")
table
params
model
summary(model)
summary(model)
model$Residues
model$residues
attributes(model)
model$residuals
model$Residuals
attributes(model)
library(ggfortify)
autoplot(data2$prate ~ data2$mrate)
desc
plot(data2$prate ~ data2$mrate)
autoplot(data2$prate ~ data2$mrate)
help(autoplot)
df_aux <- data.frame(x = data2$mrate, fitted = model$fitted.values,
residuals = model$residuals)
ggplot(data = df_aux, aes(fitted, residuals)) +
geom_point() +
labs(x = "Fitted values of the regressand",
y = "Residual = 0), colour = "blue")s",
title = "Residuals vs. Fitted Values") +
geom_smooth(method = "loess", se = FALSE, colour = "red") +
geom_hline(aes(yintercept
)
)
ggplot(data = df_aux, aes(fitted, residuals)) +
geom_point() +
labs(x = "Fitted values of the regressand",
y = "Residual = 0), colour = "blue")s",
title = "Residuals vs. Fitted Values") +
geom_smooth(method = "loess", se = FALSE, colour = "red") +
geom_hline(aes(yintercept)
)
ggplot(data = df_aux, aes(fitted, residuals)) +
geom_point() +
labs(x = "Fitted values of the regressand",
y = "Residual = 0), colour = "blue")s",
title = "Residuals vs. Fitted Values") +
geom_smooth(method = "loess", se = FALSE, colour = "red") +
geom_hline(aes(yintercept) )
df_aux <- data.frame(x = data2$mrate, fitted = model$fitted.values,
residuals = model$residuals)
ggplot(data = df_aux, aes(fitted, residuals)) +
geom_point() +
labs(x = "Fitted values of the regressand",
y = "Residual = 0), colour = "blue")s",
title = "Residuals vs. Fitted Values") +
geom_smooth(method = "loess", se = FALSE, colour = "red")
autoplot(model, which = 1)
plot(model, which = 1, main = "Residuals vs. Fitted Values", sub = "", caption = "")
ggplot(data = df_aux, aes(fitted, residuals)) +  geom_point()
ggplot(data = df_aux, aes(fitted, residuals)) +  geom_point()
ggplot(data = df_aux, aes(fitted, residuals)) +  geom_point() + labs(x = "Fitted values of the regressand",y = "Residual = 0), colour = "blue")s", title = "Residuals vs. Fitted Values")
ggplot(data = df_aux, aes(fitted, residuals)) +  geom_point() + labs(x = "Fitted values of the regressand",y = "Residual", colour = "blue", title = "Residuals vs. Fitted Values")
ggplot(data = df_aux, aes(fitted, residuals)) +
geom_point() +
labs(x = "Fitted values of the regressand",
y = "Residuals",
title = "Residuals vs. Fitted Values") +
geom_smooth(method = "loess", se = FALSE, colour = "red") +
geom_hline(aes(yintercept = 0), colour = "blue")
help(rstandard)
qqnorm(rstandard(model))
qqline(rstandard(model))
RSEs(model)
RSEs(model)[2,2]
create_regtable
table2 <- create_regtable_RSEs(model, params, c("Company match rate (%)"),  "Employees' participation rate (%) to 401K plans")
summary(model)
